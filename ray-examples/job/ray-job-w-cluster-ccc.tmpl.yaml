# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: ray.io/v1
kind: RayJob
metadata:
  name: rayjob-nccl
spec:
  entrypoint: python /home/ray/jobs/job.py

  shutdownAfterJobFinishes: true
  ttlSecondsAfterFinished: 10

  runtimeEnvYAML: |
    pip:
      - torch==2.7.1
      - requests==2.26.0
      - pendulum==2.1.2

    env_vars:
      NCCL_DEBUG: "INFO"
      NCCL_DEBUG_SUBSYS: "INIT,NET"
  rayClusterSpec:
    rayVersion: '2.48.0'

    headGroupSpec:
      rayStartParams:
        dashboard-host: "0.0.0.0"
      template:
        metadata:
          annotations:
            gke-gcsfuse/volumes: "true"
            gke-gcsfuse/cpu-limit: "0"
            gke-gcsfuse/memory-limit: "0"
            gke-gcsfuse/ephemeral-storage-limit: "0"
        spec:
          serviceAccountName: ${SERVICE_ACCOUNT}
          nodeSelector:
            cloud.google.com/gke-nodepool: "default-pool"
          containers:
          - name: ray-head
            image: ${IMAGE_NAME}
            env:
            - name: RAY_enable_autoscaler_v2
              value: "1"
            ports:
            - containerPort: 6379
              name: gcs-server
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            resources:
              limits:
                cpu: "8"
                memory: "16G"
                ephemeral-storage: "9Gi"
              requests:
                cpu: "8"
                memory: "16G"
                ephemeral-storage: "9Gi"
            volumeMounts:
              - name: codebase
                mountPath: /home/ray/jobs

              - name: ray-logs
                mountPath: /tmp/ray
              - name: gcs-fuse-csi-eph
                mountPath: /bucket
          volumes:
            - name: codebase
              configMap:
                name: codebase
                items:
                - key: job.py
                  path: job.py
            - name: ray-logs
              emptyDir: {}
            - name: gcs-fuse-csi-eph
              csi:
                driver: gcsfuse.csi.storage.gke.io
                volumeAttributes:
                  bucketName: ${BUCKET_NAME}
                  gcsfuseMetadataPrefetchOnMount: "true"
                  mountOptions: "implicit-dirs,file-mode=777,dir-mode=777,file-cache:enable-parallel-downloads:true,file-cache:cache-file-for-range-read:true,file-cache:max-size-mb:-1,write:enable-streaming-writes:true,read_ahead_kb=1024,file-system:kernel-list-cache-ttl-secs:-1"
    workerGroupSpecs:
    - replicas: 2
      minReplicas: 2
      maxReplicas: 10
      groupName: gpu-group
      rayStartParams:
        num-cpus: "220"
      template:
        metadata:
          annotations:
            gke-gcsfuse/volumes: "true"
            gke-gcsfuse/cpu-limit: "0"
            gke-gcsfuse/memory-limit: "0"
            gke-gcsfuse/ephemeral-storage-limit: "0"
            networking.gke.io/default-interface: 'eth0'
            networking.gke.io/interfaces: |
              [
                {"interfaceName":"eth0","network":"default"},
                {"interfaceName":"eth1","network":"gvnic-1"},
                {"interfaceName":"eth2","network":"rdma-0"},
                {"interfaceName":"eth3","network":"rdma-1"},
                {"interfaceName":"eth4","network":"rdma-2"},
                {"interfaceName":"eth5","network":"rdma-3"},
                {"interfaceName":"eth6","network":"rdma-4"},
                {"interfaceName":"eth7","network":"rdma-5"},
                {"interfaceName":"eth8","network":"rdma-6"},
                {"interfaceName":"eth9","network":"rdma-7"}
              ]
        spec:
          restartPolicy: Never
          serviceAccountName: ${SERVICE_ACCOUNT}
          nodeSelector:
            cloud.google.com/compute-class: "h200-ccc"
          tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "NoSchedule"
          containers:
          - name: ray-worker
            image: ${IMAGE_NAME}
            env:
            - name: LD_LIBRARY_PATH
              value: /usr/local/nvidia/lib64
            command: ["source /usr/local/gib/scripts/set_nccl_env.sh"]
            resources:
              limits:
                cpu: "220"
                memory: "2800Gi"
                nvidia.com/gpu: "8"
                ephemeral-storage: "1000Gi"
              requests:
                cpu: "220"
                memory: "2800Gi"
                nvidia.com/gpu: "8"
                ephemeral-storage: "1000Gi"
            volumeMounts:
            - name: nvidia
              mountPath: /usr/local/nvidia
            - name: gib
              mountPath: /usr/local/gib
            - name: shared-memory
              mountPath: /dev/shm
            - name: ray-tmp-storage
              mountPath: /tmp
            - name: gcs-fuse-csi-eph
              mountPath: /bucket
          volumes:
          - name: gib
            hostPath:
              path: /home/kubernetes/bin/gib
          - name: nvidia
            hostPath:
              path: /home/kubernetes/bin/nvidia
          - name: lib64
            hostPath:
              path: /lib64
          - name: shared-memory
            emptyDir:
              medium: "Memory"
              sizeLimit: 250Gi
          - name: sys
            hostPath:
              path: /sys
          - name: proc-sys
            hostPath:
              path: /proc/sys
          - name: ray-tmp-storage
            emptyDir: {}
          - name: gcs-fuse-csi-eph
            csi:
              driver: gcsfuse.csi.storage.gke.io
              volumeAttributes:
                bucketName: ${BUCKET_NAME}
                gcsfuseMetadataPrefetchOnMount: "true"
                mountOptions: "implicit-dirs,file-mode=777,dir-mode=777,file-cache:enable-parallel-downloads:true,file-cache:cache-file-for-range-read:true,file-cache:max-size-mb:-1,write:enable-streaming-writes:true,read_ahead_kb=1024,file-system:kernel-list-cache-ttl-secs:-1"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: codebase
data:
  job.py: |
    import ray
    import os
    import requests

    ray.init()

    @ray.remote
    class Counter:
        def __init__(self):
            # Used to verify runtimeEnv
            self.name = "albert"
            assert self.name == "test_counter"
            self.counter = 0

        def inc(self):
            self.counter += 1

        def get_counter(self):
            return "{} got {}".format(self.name, self.counter)

    counter = Counter.remote()

    for _ in range(5):
        ray.get(counter.inc.remote())
        print(ray.get(counter.get_counter.remote()))

    # Verify that the correct runtime env was used for the job.
    assert requests.__version__ == "2.48.0"